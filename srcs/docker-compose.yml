services:
  mariadb:
    build:
      context: ./requirements/mariadb
    image: mariadb
    container_name: mariadb
    env_file: .env
    volumes:
      - mariadb_data:/var/lib/mysql
    restart: always
    networks:
      - inception
    secrets:
      - mysql_root_password
      - mysql_user_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5

  wordpress:
    build:
      context: ./requirements/wordpress
    image: wordpress
    container_name: wordpress
    expose:
     - "9000"
    env_file: .env
    volumes:
      - wordpress_data:/var/www/wordpress
    networks:
      - inception
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
       condition: service_started
    restart: always
    secrets:
      - wordpress_db_password
      - wordpress_admin_password
      - wordpress_second_user_password
    healthcheck:
     test: ["CMD", "php-fpm82", "-t"]
     interval: 10s
     timeout: 5s
     retries: 3

  nginx:
    build:
      context: ./requirements/nginx
    container_name: nginx
    ports:
      - "443:443"
    depends_on:
      wordpress:
        condition: service_healthy
    volumes:
      - wordpress_data:/var/www/wordpress
    networks:
      - inception
    restart: always

  adminer:
   build:
    context: ./requirements/bonus/adminer
   container_name: adminer
   depends_on:
    mariadb:
     condition: service_healthy
   ports:
     - "8080:8080"
   networks:
     - inception
   restart: always

  redis:
   build:
    context: ./requirements/bonus/redis
   container_name: redis
   networks:
    - inception
   restart: always

  ftp:
   build: ./requirements/bonus/ftp
   container_name: ftp
   ports:
    - "21:21"
    - "30000-30100:30000-30100"
   volumes:
    - wordpress_data:/var/www/wordpress
    - /dev/pts:/dev/pts 
   tty: true
   depends_on:
    wordpress:
     condition: service_healthy
   restart: always
   networks:
    - inception

  site:
    build: ./requirements/bonus/site
    container_name: site
    ports:
      - "8181:80"
    networks:
      - inception
    restart: always

  prometheus:
    build:
      context: ./requirements/bonus/prometheus
    container_name: prometheus
    restart: always
    depends_on:
     cadvisor:
      condition: service_started
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - prometheus_data:/etc/prometheus
    networks:
      - inception

  grafana:
    build:
      context: ./requirements/bonus/grafana
    container_name: grafana
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000"
    networks:
      - inception

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8282:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - inception

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: /home/agraille/data/mariadb
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/agraille/data/wordpress
      o: bind
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      device: /home/agraille/data/prometheus
      o: bind

networks:
  inception:
    driver: bridge


secrets:
  mysql_root_password:
    file: ../secrets/mysql_root_password.txt
  mysql_user_password:
    file: ../secrets/mysql_user_password.txt
  wordpress_db_password:
    file: ../secrets/wordpress_db_password.txt
  wordpress_admin_password:
    file: ../secrets/wordpress_admin_password.txt
  wordpress_second_user_password:
    file: ../secrets/wordpress_second_user_password.txt
